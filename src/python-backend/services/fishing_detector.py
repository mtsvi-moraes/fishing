from config.settings import Config
from utils.response_parser import parse_gemini_response
from typing import Dict, Any

class FishingDetector:
    def __init__(self):
        self.config = Config()
    
    def analyze_email(self, email_content: str) -> Dict[Any, Any]:
        """Analyze email content for fishing detection"""
        try:
            response = self.config.generate_content(email_content)
            return parse_gemini_response(response)
        except Exception as e:
            # Log error in production
            raise RuntimeError(f"Fishing analysis failed: {e}")
    
    def get_sample_analysis(self) -> Dict[Any, Any]:
        """Get analysis of a sample suspicious email"""
        sample_email = """
Assunto: üö® Alerta de Seguran√ßa: Acesso suspeito √† sua conta banc√°ria

De: suporte@itauseguro-online.com.br
Para: cliente@exemplo.com

Prezado(a) cliente,

Detectamos uma atividade suspeita em sua conta na madrugada de hoje (11/06/2025), √†s 03:14 AM, a partir de um dispositivo desconhecido localizado em Fortaleza/CE.

Por motivos de seguran√ßa, sua conta foi temporariamente bloqueada at√© que possamos verificar sua identidade.

Para desbloquear sua conta e evitar a suspens√£o permanente, pedimos que acesse o link abaixo e confirme suas informa√ß√µes:

üîí Acesse sua conta com seguran√ßa

Caso o procedimento n√£o seja realizado nas pr√≥ximas 12 horas, sua conta ser√° suspensa automaticamente como medida preventiva.

Agradecemos sua compreens√£o.
Atenciosamente,
Equipe de Seguran√ßa Ita√∫ Unibanco
suporte@itauseguro-online.com.br

Este √© um e-mail autom√°tico. N√£o responda a esta mensagem.
"""
        return self.analyze_email(sample_email)